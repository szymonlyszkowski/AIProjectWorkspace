FUNCTION_BLOCK example

VAR_INPUT
	mineDicesCountInCurrentVertex : REAL;
	enemysDicesCountInCurrentVertex : REAL;
	overallPossesion : REAL;
	range1Possesion : REAL;
	range2Possesion : REAL;
	range3Possesion : REAL;
	mineOverallDicesCount : REAL;
	enemysOverallDicesCount : REAL;
END_VAR

VAR_OUTPUT
	decision : REAL;
END_VAR

// CUSTOMIZE HERE
FUZZIFY mineDicesCountInCurrentVertex
	TERM little := (0, 1) (4, 0);
	TERM average := (2, 0) (5, 1) (8,0);
	TERM plenty := (6, 0) (10, 1);
END_FUZZIFY

FUZZIFY enemysDicesCountInCurrentVertex
	TERM little := (0, 1) (4, 0);
	TERM average := (2, 0) (5, 1) (8,0);
	TERM plenty := (6, 0) (10, 1);
END_FUZZIFY

FUZZIFY mineOverallDicesCount
	TERM little := (0, 1) (20, 0);
	TERM average := (15, 0) (30, 1) (45,0);
	TERM plenty := (40, 0) (60, 1) (1000000, 1);
END_FUZZIFY

FUZZIFY enemysOverallDicesCount
	TERM little := (0, 1) (20, 0);
	TERM average := (15, 0) (30, 1) (45,0);
	TERM plenty := (40, 0) (60, 1) (1000000, 1);
END_FUZZIFY

FUZZIFY overallPossesion
	TERM majorityIsMine := (0.5, 0) (1, 1);
	TERM theSame := (0.25, 0) (0.5, 1) (0.75,0);
	TERM majorityIsEnemys := (0, 1) (0.5, 0);
END_FUZZIFY

FUZZIFY range1Possesion
	TERM majorityIsMine := (0.5, 0) (1, 1);
	TERM theSame := (0.25, 0) (0.5, 1) (0.75,0);
	TERM majorityIsEnemys := (0, 1) (0.5, 0);
END_FUZZIFY

FUZZIFY range2Possesion
	TERM majorityIsMine := (0.5, 0) (1, 1);
	TERM theSame := (0.25, 0) (0.5, 1) (0.75,0);
	TERM majorityIsEnemys := (0, 1) (0.5, 0);
END_FUZZIFY

FUZZIFY range3Possesion
	TERM majorityIsMine := (0.5, 0) (1, 1);
	TERM theSame := (0.25, 0) (0.5, 1) (0.75,0);
	TERM majorityIsEnemys := (0, 1) (0.5, 0);
END_FUZZIFY

DEFUZZIFY decision
	TERM doNothing := (0,1) (5,1) (5,0);
	TERM fight := (5,0) (5,1) (10, 1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF mineDicesCountInCurrentVertex IS plenty THEN decision IS fight;
    RULE 2 : IF enemysDicesCountInCurrentVertex IS plenty THEN decision IS doNothing;
END_RULEBLOCK

//END OF CUSTOMIZATION
END_FUNCTION_BLOCK
