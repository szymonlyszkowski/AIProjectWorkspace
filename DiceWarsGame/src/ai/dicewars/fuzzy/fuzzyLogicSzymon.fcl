/*
* 171132 Szymon ≈Åyszkowski
*/
FUNCTION_BLOCK diceWarsGame

VAR_INPUT
dicesAmountInCurrentVertex: REAL;
dicesAmountInVertexToAttack: REAL;
mineOverallDicesPossessionRatio: REAL;
mineOverallDicesAmount: REAL;
enemiesOverallDicesAmount: REAL;
mineSafeVertexAmount: REAL;
mineOverallVertexAmount: REAL;
mineOverallVertexPossessionRatio: REAL;
enemiesOverallVertexAmount: REAL;
END_VAR

VAR_OUTPUT
	decision : REAL;
END_VAR

// CUSTOMIZE HERE
FUZZIFY dicesAmountInCurrentVertex
	TERM little := (0, 0) (2, 0.1) (3,0);
	TERM average:= (2, 0.1) (3,0.3) (3,0);
	TERM ok := (3,0.3) (5,0.5) (5,0);
	TERM plenty := (5, 0.5) (8, 1);
END_FUZZIFY

FUZZIFY dicesAmountInVertexToAttack
	TERM little := (0, 0) (2, 0.1) (3,0);
	TERM average:= (2, 0.1) (3,0.3) (3,0);
	TERM ok := (3,0.3) (5,0.5);
	TERM plenty := (5, 0.5) (8, 1);
END_FUZZIFY

FUZZIFY mineOverallDicesAmount
	TERM little := (0, 1) (2, 0) (3, 1);
	TERM average := (3, 0) (5, 1) (7,0);
	TERM ok := (7,0) (10, 1) (12,0);
	TERM plenty := (12, 0) (15, 1) (100, 1);
END_FUZZIFY

FUZZIFY mineOverallDicesPossessionRatio
	TERM little := (0, 0) (10, 0.2) (10,0);
	TERM average := (10, 0.2) (15, 0.4) (15,0);
	TERM ok := (15,0.4) (50, 0.6) (50,0);
	TERM plenty := (50, 0.6) (100, 1);
END_FUZZIFY

FUZZIFY enemiesOverallDicesAmount
	TERM little := (0, 1) (2, 0) (3, 1);
	TERM average := (3, 0) (5, 1) (7,0);
	TERM ok := (7,0) (10, 1) (12,0);
	TERM plenty := (12, 0) (15, 1) (100, 1);
END_FUZZIFY

FUZZIFY mineSafeVertexAmount
	TERM little := (0, 1) (2, 0);
	TERM average := (2, 0) (3, 1) (4,0);
	TERM plenty := (4, 0) (100, 1);
END_FUZZIFY

FUZZIFY mineOverallVertexAmount
	TERM little := (0, 1) (3, 0);
	TERM average := (3, 0) (5, 1) (7,0);
	TERM ok := (7,0) (10, 1) (12,0);
	TERM plenty := (12, 0) (60, 1) (100, 1);
END_FUZZIFY

FUZZIFY mineOverallVertexPossessionRatio
	TERM little := (0, 0) (20, 0.2);
	TERM average := (20, 0.2) (35, 0.4);
	TERM ok := (35,0.4) (50, 0.6);
	TERM plenty := (50, 0.6) (100, 1);
END_FUZZIFY

FUZZIFY enemiesOverallVertexAmount
	TERM little := (0, 1) (3, 0);
	TERM average := (3, 0) (5, 1) (7,0);
	TERM ok := (7,0) (10, 1) (12,0);
	TERM plenty := (12, 0) (60, 1) (100, 1);
END_FUZZIFY


DEFUZZIFY decision
	TERM doNothing := (0,1) (5,1) (5,0);
	TERM fight := (5,0) (5,1) (10, 1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 6;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF ((dicesAmountInCurrentVertex IS plenty) OR (dicesAmountInCurrentVertex IS ok) OR(dicesAmountInCurrentVertex IS average))THEN decision IS fight;
    RULE 2 : IF dicesAmountInVertexToAttack IS plenty THEN decision IS doNothing;
    RULE 3 : IF ((dicesAmountInCurrentVertex IS ok) AND (dicesAmountInVertexToAttack IS ok)) THEN decision IS fight;
    RULE 4 : IF ((dicesAmountInCurrentVertex IS plenty) AND (dicesAmountInVertexToAttack IS ok)) THEN decision IS fight;
    RULE 5 : IF ((mineOverallDicesAmount IS ok) OR (mineOverallDicesAmount IS plenty)) THEN decision IS fight;
    RULE 6 : IF ((mineOverallDicesPossessionRatio IS ok) OR (mineOverallDicesPossessionRatio IS plenty)) THEN decision IS fight;
    RULE 7 : IF ((enemiesOverallVertexAmount IS average) OR (enemiesOverallVertexAmount IS little)) THEN decision IS fight;
    RULE 8 : IF ((mineOverallVertexPossessionRatio IS ok) OR (mineOverallVertexPossessionRatio IS plenty) OR (mineOverallVertexPossessionRatio is average))
    THEN decision IS fight;
    RULE 9: IF mineSafeVertexAmount is plenty THEN decision is fight;

END_RULEBLOCK

//END OF CUSTOMIZATION
END_FUNCTION_BLOCK


